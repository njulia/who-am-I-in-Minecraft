
import { GoogleGenAI, Type, Modality } from '@google/genai';
import { MINECRAFT_CHARACTERS } from '../constants';
import type { MinecraftCharacter } from '../types';

const ai = new GoogleGenAI({ apiKey: process.env.API_KEY as string });

export const matchCharacter = async (base64Image: string, mimeType: string): Promise<MinecraftCharacter> => {
  const characterList = MINECRAFT_CHARACTERS.map(c => `${c.name}: ${c.description}`).join('\n');

  const response = await ai.models.generateContent({
    model: 'gemini-2.5-flash',
    contents: {
      parts: [
        {
          inlineData: {
            data: base64Image,
            mimeType: mimeType,
          },
        },
        {
          text: `Analyze the person in this image. Based on their appearance, clothing, and overall vibe, which of the following Minecraft characters are they most similar to?

Characters:
${characterList}

Only respond with the name of the single best-matched character.
`,
        },
      ],
    },
    config: {
        responseMimeType: 'application/json',
        responseSchema: {
            type: Type.OBJECT,
            properties: {
                characterName: {
                    type: Type.STRING,
                    description: 'The name of the matched Minecraft character.'
                }
            }
        }
    }
  });

  const jsonResponse = JSON.parse(response.text);
  const characterName = jsonResponse.characterName;

  const foundCharacter = MINECRAFT_CHARACTERS.find(c => c.name.toLowerCase() === characterName.toLowerCase());

  if (!foundCharacter) {
    throw new Error(`Could not find character details for: ${characterName}`);
  }

  return foundCharacter;
};

export const createOutfitImage = async (
  base64ImageData: string,
  mimeType: string,
  characterName: string
): Promise<string> => {
    const response = await ai.models.generateContent({
        model: 'gemini-2.5-flash-image-preview',
        contents: {
            parts: [
                {
                    inlineData: {
                        data: base64ImageData,
                        mimeType: mimeType,
                    },
                },
                {
                    text: `Please redraw the person in this image wearing an outfit inspired by the character '${characterName}' from the game Minecraft. The new outfit should be a real-world interpretation of the character's clothing, not pixelated. Keep the person's face, hair, and the background of the original image as much as possible. The final image should be photorealistic.`,
                },
            ],
        },
        config: {
            responseModalities: [Modality.IMAGE, Modality.TEXT],
        },
    });

    for (const part of response.candidates[0].content.parts) {
        if (part.inlineData) {
            return `data:${part.inlineData.mimeType};base64,${part.inlineData.data}`;
        }
    }

    throw new Error('No image was generated by the AI.');
};
